
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m      [2m (v2.3.4.RELEASE)[0;39m

[2m2020-12-31 00:50:16.878[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.c.c.ConfigServicePropertySourceLocator[0;39m [2m:[0;39m Fetching config from server at : http://localhost:8888
[2m2020-12-31 00:50:17.808[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.c.c.ConfigServicePropertySourceLocator[0;39m [2m:[0;39m Located environment: name=user-authorization-service, profiles=[default], label=null, version=c878e747078ca7b5ad3add9d8e848996396aa0b3, state=null
[2m2020-12-31 00:50:17.812[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mb.c.PropertySourceBootstrapConfiguration[0;39m [2m:[0;39m Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-D:/Workspace/config/user-authorization-service.properties'}]
[2m2020-12-31 00:50:17.842[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.u.a.UserAuthorizationServer           [0;39m [2m:[0;39m No active profile set, falling back to default profiles: default
[2m2020-12-31 00:50:18.786[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2020-12-31 00:50:18.788[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2m2020-12-31 00:50:19.113[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 315ms. Found 3 JPA repository interfaces.
[2m2020-12-31 00:50:19.128[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Multiple Spring Data modules found, entering strict repository configuration mode!
[2m2020-12-31 00:50:19.130[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2m2020-12-31 00:50:19.145[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.user.authorization.repository.AddressRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
[2m2020-12-31 00:50:19.145[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.user.authorization.repository.ContactRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
[2m2020-12-31 00:50:19.146[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36m.RepositoryConfigurationExtensionSupport[0;39m [2m:[0;39m Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.user.authorization.repository.RegisterRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
[2m2020-12-31 00:50:19.146[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
[2m2020-12-31 00:50:19.314[0;39m [33m WARN[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.boot.actuate.endpoint.EndpointId    [0;39m [2m:[0;39m Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2m2020-12-31 00:50:19.510[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.cloud.context.scope.GenericScope    [0;39m [2m:[0;39m BeanFactory id=9f644d54-4d51-3fa5-b6b9-c5886eba9c48
[2m2020-12-31 00:50:19.680[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mtrationDelegate$BeanPostProcessorChecker[0;39m [2m:[0;39m Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2m2020-12-31 00:50:19.681[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mtrationDelegate$BeanPostProcessorChecker[0;39m [2m:[0;39m Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2m2020-12-31 00:50:19.683[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mtrationDelegate$BeanPostProcessorChecker[0;39m [2m:[0;39m Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2m2020-12-31 00:50:19.941[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat initialized with port(s): 8000 (http)
[2m2020-12-31 00:50:19.952[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Starting service [Tomcat]
[2m2020-12-31 00:50:19.952[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.apache.catalina.core.StandardEngine [0;39m [2m:[0;39m Starting Servlet engine: [Apache Tomcat/9.0.38]
[2m2020-12-31 00:50:20.105[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.a.c.c.C.[Tomcat].[localhost].[/]      [0;39m [2m:[0;39m Initializing Spring embedded WebApplicationContext
[2m2020-12-31 00:50:20.105[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Root WebApplicationContext: initialization completed in 2244 ms
[2m2020-12-31 00:50:20.255[0;39m [33m WARN[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m No URLs will be polled as dynamic configuration sources.
[2m2020-12-31 00:50:20.255[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2m2020-12-31 00:50:20.276[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.netflix.config.DynamicPropertyFactory [0;39m [2m:[0;39m DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@9f2376f
[2m2020-12-31 00:50:20.559[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.hibernate.jpa.internal.util.LogHelper [0;39m [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[2m2020-12-31 00:50:20.623[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.Version                   [0;39m [2m:[0;39m HHH000412: Hibernate ORM core version 5.4.21.Final
[2m2020-12-31 00:50:20.806[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.hibernate.annotations.common.Version  [0;39m [2m:[0;39m HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[2m2020-12-31 00:50:20.844[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration boolean -> org.hibernate.type.BooleanType@72d0196d
[2m2020-12-31 00:50:20.844[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration boolean -> org.hibernate.type.BooleanType@72d0196d
[2m2020-12-31 00:50:20.844[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@72d0196d
[2m2020-12-31 00:50:20.845[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@490d9c41
[2m2020-12-31 00:50:20.845[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration true_false -> org.hibernate.type.TrueFalseType@565a6af
[2m2020-12-31 00:50:20.846[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration yes_no -> org.hibernate.type.YesNoType@3a9c92b5
[2m2020-12-31 00:50:20.847[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration byte -> org.hibernate.type.ByteType@7b2dd35d
[2m2020-12-31 00:50:20.847[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration byte -> org.hibernate.type.ByteType@7b2dd35d
[2m2020-12-31 00:50:20.847[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b2dd35d
[2m2020-12-31 00:50:20.848[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration character -> org.hibernate.type.CharacterType@5d6d424d
[2m2020-12-31 00:50:20.848[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration char -> org.hibernate.type.CharacterType@5d6d424d
[2m2020-12-31 00:50:20.848[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5d6d424d
[2m2020-12-31 00:50:20.849[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration short -> org.hibernate.type.ShortType@63d66761
[2m2020-12-31 00:50:20.849[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration short -> org.hibernate.type.ShortType@63d66761
[2m2020-12-31 00:50:20.850[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63d66761
[2m2020-12-31 00:50:20.851[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration integer -> org.hibernate.type.IntegerType@64f6dd19
[2m2020-12-31 00:50:20.851[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration int -> org.hibernate.type.IntegerType@64f6dd19
[2m2020-12-31 00:50:20.851[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64f6dd19
[2m2020-12-31 00:50:20.852[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration long -> org.hibernate.type.LongType@395197cb
[2m2020-12-31 00:50:20.852[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration long -> org.hibernate.type.LongType@395197cb
[2m2020-12-31 00:50:20.852[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.Long -> org.hibernate.type.LongType@395197cb
[2m2020-12-31 00:50:20.853[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration float -> org.hibernate.type.FloatType@134955bb
[2m2020-12-31 00:50:20.853[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration float -> org.hibernate.type.FloatType@134955bb
[2m2020-12-31 00:50:20.853[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.Float -> org.hibernate.type.FloatType@134955bb
[2m2020-12-31 00:50:20.854[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration double -> org.hibernate.type.DoubleType@7d70ba18
[2m2020-12-31 00:50:20.854[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration double -> org.hibernate.type.DoubleType@7d70ba18
[2m2020-12-31 00:50:20.854[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d70ba18
[2m2020-12-31 00:50:20.855[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b68932b
[2m2020-12-31 00:50:20.856[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b68932b
[2m2020-12-31 00:50:20.857[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5bccef9f
[2m2020-12-31 00:50:20.857[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5bccef9f
[2m2020-12-31 00:50:20.858[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration string -> org.hibernate.type.StringType@185a0811
[2m2020-12-31 00:50:20.858[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.String -> org.hibernate.type.StringType@185a0811
[2m2020-12-31 00:50:20.858[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6c19769c
[2m2020-12-31 00:50:20.859[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6abb44cb
[2m2020-12-31 00:50:20.860[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration url -> org.hibernate.type.UrlType@62de20d3
[2m2020-12-31 00:50:20.860[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.net.URL -> org.hibernate.type.UrlType@62de20d3
[2m2020-12-31 00:50:20.861[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration Duration -> org.hibernate.type.DurationType@7b0525a8
[2m2020-12-31 00:50:20.861[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b0525a8
[2m2020-12-31 00:50:20.862[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration Instant -> org.hibernate.type.InstantType@14fff5e7
[2m2020-12-31 00:50:20.862[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14fff5e7
[2m2020-12-31 00:50:20.863[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dd08ff1
[2m2020-12-31 00:50:20.864[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dd08ff1
[2m2020-12-31 00:50:20.865[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration LocalDate -> org.hibernate.type.LocalDateType@49639118
[2m2020-12-31 00:50:20.865[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@49639118
[2m2020-12-31 00:50:20.866[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5fd4e67f
[2m2020-12-31 00:50:20.866[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5fd4e67f
[2m2020-12-31 00:50:20.867[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@147375b3
[2m2020-12-31 00:50:20.867[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@147375b3
[2m2020-12-31 00:50:20.868[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3abadb65
[2m2020-12-31 00:50:20.868[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3abadb65
[2m2020-12-31 00:50:20.869[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7096d451
[2m2020-12-31 00:50:20.870[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7096d451
[2m2020-12-31 00:50:20.871[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration date -> org.hibernate.type.DateType@11b14ae3
[2m2020-12-31 00:50:20.871[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.sql.Date -> org.hibernate.type.DateType@11b14ae3
[2m2020-12-31 00:50:20.872[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration time -> org.hibernate.type.TimeType@6c9e74f3
[2m2020-12-31 00:50:20.872[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6c9e74f3
[2m2020-12-31 00:50:20.873[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration timestamp -> org.hibernate.type.TimestampType@1554eaa4
[2m2020-12-31 00:50:20.873[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1554eaa4
[2m2020-12-31 00:50:20.873[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1554eaa4
[2m2020-12-31 00:50:20.875[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7074da1d
[2m2020-12-31 00:50:20.876[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration calendar -> org.hibernate.type.CalendarType@4189e668
[2m2020-12-31 00:50:20.876[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4189e668
[2m2020-12-31 00:50:20.877[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4189e668
[2m2020-12-31 00:50:20.877[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4037cdb0
[2m2020-12-31 00:50:20.878[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4ec616d6
[2m2020-12-31 00:50:20.879[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration locale -> org.hibernate.type.LocaleType@1df32c09
[2m2020-12-31 00:50:20.879[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1df32c09
[2m2020-12-31 00:50:20.880[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration currency -> org.hibernate.type.CurrencyType@749ee0e3
[2m2020-12-31 00:50:20.880[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@749ee0e3
[2m2020-12-31 00:50:20.881[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d3bb944
[2m2020-12-31 00:50:20.881[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d3bb944
[2m2020-12-31 00:50:20.882[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration class -> org.hibernate.type.ClassType@40cb95c1
[2m2020-12-31 00:50:20.883[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.Class -> org.hibernate.type.ClassType@40cb95c1
[2m2020-12-31 00:50:20.883[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2ccecae2
[2m2020-12-31 00:50:20.884[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2ccecae2
[2m2020-12-31 00:50:20.884[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cc075da
[2m2020-12-31 00:50:20.885[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration binary -> org.hibernate.type.BinaryType@40fcaae7
[2m2020-12-31 00:50:20.885[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration byte[] -> org.hibernate.type.BinaryType@40fcaae7
[2m2020-12-31 00:50:20.885[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration [B -> org.hibernate.type.BinaryType@40fcaae7
[2m2020-12-31 00:50:20.887[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@684a802a
[2m2020-12-31 00:50:20.887[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@684a802a
[2m2020-12-31 00:50:20.887[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@684a802a
[2m2020-12-31 00:50:20.888[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration row_version -> org.hibernate.type.RowVersionType@215a329c
[2m2020-12-31 00:50:20.888[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration image -> org.hibernate.type.ImageType@2b0d85bd
[2m2020-12-31 00:50:20.889[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration characters -> org.hibernate.type.CharArrayType@3a917017
[2m2020-12-31 00:50:20.889[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration char[] -> org.hibernate.type.CharArrayType@3a917017
[2m2020-12-31 00:50:20.889[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration [C -> org.hibernate.type.CharArrayType@3a917017
[2m2020-12-31 00:50:20.890[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1700d089
[2m2020-12-31 00:50:20.890[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1700d089
[2m2020-12-31 00:50:20.890[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1700d089
[2m2020-12-31 00:50:20.891[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration text -> org.hibernate.type.TextType@3bb4c2b2
[2m2020-12-31 00:50:20.891[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration ntext -> org.hibernate.type.NTextType@38caad07
[2m2020-12-31 00:50:20.893[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration blob -> org.hibernate.type.BlobType@361fa478
[2m2020-12-31 00:50:20.893[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@361fa478
[2m2020-12-31 00:50:20.893[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3b4f1eb
[2m2020-12-31 00:50:20.895[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration clob -> org.hibernate.type.ClobType@e2f6e13
[2m2020-12-31 00:50:20.895[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e2f6e13
[2m2020-12-31 00:50:20.896[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration nclob -> org.hibernate.type.NClobType@fe13916
[2m2020-12-31 00:50:20.896[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@fe13916
[2m2020-12-31 00:50:20.897[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@234ce7ff
[2m2020-12-31 00:50:20.897[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@470f0637
[2m2020-12-31 00:50:20.899[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration serializable -> org.hibernate.type.SerializableType@ba86c53
[2m2020-12-31 00:50:20.902[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration object -> org.hibernate.type.ObjectType@3ae91ab3
[2m2020-12-31 00:50:20.902[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3ae91ab3
[2m2020-12-31 00:50:20.902[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57867d96
[2m2020-12-31 00:50:20.903[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a7a21d0
[2m2020-12-31 00:50:20.903[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@bb21063
[2m2020-12-31 00:50:20.903[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6821c63c
[2m2020-12-31 00:50:20.903[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c2f7c63
[2m2020-12-31 00:50:20.903[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4790b897
[2m2020-12-31 00:50:20.903[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5cba890e
[2m2020-12-31 00:50:20.903[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.type.BasicTypeRegistry    [0;39m [2m:[0;39m Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a4cb483
[2m2020-12-31 00:50:20.963[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Starting...
[2m2020-12-31 00:50:21.149[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Start completed.
[2m2020-12-31 00:50:21.195[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36morg.hibernate.dialect.Dialect           [0;39m [2m:[0;39m HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[2m2020-12-31 00:50:21.282[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.h.type.spi.TypeConfiguration$Scope    [0;39m [2m:[0;39m Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63551c66] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2761156e]
[2m2020-12-31 00:50:21.621[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.h.type.spi.TypeConfiguration$Scope    [0;39m [2m:[0;39m Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63551c66] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56351c02]
Hibernate: drop table if exists address
Hibernate: drop table if exists contact
Hibernate: drop table if exists user_registration
Hibernate: create table address (address_id bigint not null auto_increment, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), state varchar(255), user_id bigint, zipcode varchar(255), primary key (address_id)) engine=InnoDB
Hibernate: create table contact (contact_id bigint not null auto_increment, alternate_email varchar(255), alternate_phone_number varchar(255), dob datetime(6), phone_number varchar(255), user_id bigint, primary key (contact_id)) engine=InnoDB
Hibernate: create table user_registration (register_id bigint not null auto_increment, email_address varchar(255), password varchar(255), status varchar(255), unique_id varchar(255), username varchar(255), primary key (register_id)) engine=InnoDB
Hibernate: alter table user_registration add constraint UK_qnu1wutbjk71lbb3ej8hklh6x unique (email_address)
Hibernate: alter table user_registration add constraint UK_l14iwi4d128a58mojwsve8bf5 unique (username)
[2m2020-12-31 00:50:27.807[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m [2m:[0;39m HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2m2020-12-31 00:50:27.814[0;39m [32mTRACE[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.h.type.spi.TypeConfiguration$Scope    [0;39m [2m:[0;39m Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@56351c02] for TypeConfiguration
[2m2020-12-31 00:50:27.816[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[2m2020-12-31 00:50:28.096[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.h.stat.internal.StatisticsInitiator   [0;39m [2m:[0;39m Statistics initialized [enabled=false]
[2m2020-12-31 00:50:28.383[0;39m [33m WARN[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m No URLs will be polled as dynamic configuration sources.
[2m2020-12-31 00:50:28.383[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.c.sources.URLConfigurationSource    [0;39m [2m:[0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2m2020-12-31 00:50:28.500[0;39m [33m WARN[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mJpaBaseConfiguration$JpaWebConfiguration[0;39m [2m:[0;39m spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2m2020-12-31 00:50:28.584[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.s.concurrent.ThreadPoolTaskExecutor [0;39m [2m:[0;39m Initializing ExecutorService 'applicationTaskExecutor'
[2m2020-12-31 00:50:31.215[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mDiscoveryClientOptionalArgsConfiguration[0;39m [2m:[0;39m Eureka HTTP Client uses Jersey
[2m2020-12-31 00:50:31.747[0;39m [33m WARN[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mockingLoadBalancerClientRibbonWarnLogger[0;39m [2m:[0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2m2020-12-31 00:50:31.763[0;39m [33m WARN[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36meactorLoadBalancerClientRibbonWarnLogger[0;39m [2m:[0;39m You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2m2020-12-31 00:50:31.802[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.a.e.web.EndpointLinksResolver     [0;39m [2m:[0;39m Exposing 2 endpoint(s) beneath base path '/actuator'
[2m2020-12-31 00:50:31.938[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.n.eureka.InstanceInfoFactory      [0;39m [2m:[0;39m Setting initial instance status as: STARTING
[2m2020-12-31 00:50:31.986[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Initializing Eureka in region us-east-1
[2m2020-12-31 00:50:32.536[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.d.provider.DiscoveryJerseyProvider  [0;39m [2m:[0;39m Using JSON encoding codec LegacyJacksonJson
[2m2020-12-31 00:50:32.537[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.d.provider.DiscoveryJerseyProvider  [0;39m [2m:[0;39m Using JSON decoding codec LegacyJacksonJson
[2m2020-12-31 00:50:32.701[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.d.provider.DiscoveryJerseyProvider  [0;39m [2m:[0;39m Using XML encoding codec XStreamXml
[2m2020-12-31 00:50:32.701[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.d.provider.DiscoveryJerseyProvider  [0;39m [2m:[0;39m Using XML decoding codec XStreamXml
[2m2020-12-31 00:50:32.973[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.d.s.r.aws.ConfigClusterResolver     [0;39m [2m:[0;39m Resolving eureka endpoints via configuration
[2m2020-12-31 00:50:33.344[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Disable delta property : false
[2m2020-12-31 00:50:33.344[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Single vip registry refresh property : null
[2m2020-12-31 00:50:33.344[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Force full registry fetch : false
[2m2020-12-31 00:50:33.344[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Application is null : false
[2m2020-12-31 00:50:33.344[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Registered Applications size is zero : true
[2m2020-12-31 00:50:33.344[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Application version is -1: true
[2m2020-12-31 00:50:33.344[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Getting all instance registry info from the eureka server
[2m2020-12-31 00:50:33.481[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m The response status is 200
[2m2020-12-31 00:50:33.482[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Starting heartbeat executor: renew interval is: 30
[2m2020-12-31 00:50:33.485[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mc.n.discovery.InstanceInfoReplicator    [0;39m [2m:[0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
[2m2020-12-31 00:50:33.490[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Discovery Client initialized at timestamp 1609356033489 with initial instances count: 0
[2m2020-12-31 00:50:33.493[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.c.n.e.s.EurekaServiceRegistry       [0;39m [2m:[0;39m Registering application USER-AUTHORIZATION-SERVICE with eureka with status UP
[2m2020-12-31 00:50:33.494[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Saw local status change event StatusChangeEvent [timestamp=1609356033494, current=UP, previous=STARTING]
[2m2020-12-31 00:50:33.497[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[nfoReplicator-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m DiscoveryClient_USER-AUTHORIZATION-SERVICE/host.docker.internal:user-authorization-service:8000: registering service...
[2m2020-12-31 00:50:33.562[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.a.k.clients.consumer.ConsumerConfig   [0;39m [2m:[0;39m ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group-id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

[2m2020-12-31 00:50:33.571[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[nfoReplicator-0][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m DiscoveryClient_USER-AUTHORIZATION-SERVICE/host.docker.internal:user-authorization-service:8000 - registration status: 204
[2m2020-12-31 00:50:33.675[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.a.kafka.common.utils.AppInfoParser    [0;39m [2m:[0;39m Kafka version: 2.5.1
[2m2020-12-31 00:50:33.675[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.a.kafka.common.utils.AppInfoParser    [0;39m [2m:[0;39m Kafka commitId: 0efa8fb0f4c73d92
[2m2020-12-31 00:50:33.675[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.a.kafka.common.utils.AppInfoParser    [0;39m [2m:[0;39m Kafka startTimeMs: 1609356033673
[2m2020-12-31 00:50:33.678[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.a.k.clients.consumer.KafkaConsumer    [0;39m [2m:[0;39m [Consumer clientId=consumer-group-id-1, groupId=group-id] Subscribed to topic(s): mail_topic
[2m2020-12-31 00:50:33.681[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.s.c.ThreadPoolTaskScheduler         [0;39m [2m:[0;39m Initializing ExecutorService
[2m2020-12-31 00:50:33.692[0;39m [33m WARN[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mConfigServletWebServerApplicationContext[0;39m [2m:[0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8000 is already in use
[2m2020-12-31 00:50:33.727[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.s.concurrent.ThreadPoolTaskExecutor [0;39m [2m:[0;39m Shutting down ExecutorService 'applicationTaskExecutor'
[2m2020-12-31 00:50:33.731[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Closing JPA EntityManagerFactory for persistence unit 'default'
[2m2020-12-31 00:50:33.731[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36m.SchemaDropperImpl$DelayedDropActionImpl[0;39m [2m:[0;39m HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
Hibernate: drop table if exists address
[2m2020-12-31 00:50:34.166[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36morg.apache.kafka.clients.Metadata       [0;39m [2m:[0;39m [Consumer clientId=consumer-group-id-1, groupId=group-id] Cluster ID: sATySKDeR0G6p5AEOESTGA
[2m2020-12-31 00:50:34.168[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m [2m:[0;39m [Consumer clientId=consumer-group-id-1, groupId=group-id] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
[2m2020-12-31 00:50:34.171[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m [2m:[0;39m [Consumer clientId=consumer-group-id-1, groupId=group-id] (Re-)joining group
[2m2020-12-31 00:50:34.185[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m [2m:[0;39m [Consumer clientId=consumer-group-id-1, groupId=group-id] Join group failed with org.apache.kafka.common.errors.MemberIdRequiredException: The group member needs to have a valid member id before actually entering a consumer group
[2m2020-12-31 00:50:34.185[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m [2m:[0;39m [Consumer clientId=consumer-group-id-1, groupId=group-id] (Re-)joining group
[2m2020-12-31 00:50:34.195[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m [2m:[0;39m [Consumer clientId=consumer-group-id-1, groupId=group-id] Finished assignment for group at generation 17: {consumer-group-id-1-0ef5b2e4-bebc-4019-a190-3f5a109f6eca=Assignment(partitions=[mail_topic-0])}
[2m2020-12-31 00:50:34.199[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.AbstractCoordinator [0;39m [2m:[0;39m [Consumer clientId=consumer-group-id-1, groupId=group-id] Successfully joined group with generation 17
[2m2020-12-31 00:50:34.205[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m [2m:[0;39m [Consumer clientId=consumer-group-id-1, groupId=group-id] Adding newly assigned partitions: mail_topic-0
[2m2020-12-31 00:50:34.250[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.a.k.c.c.internals.ConsumerCoordinator [0;39m [2m:[0;39m [Consumer clientId=consumer-group-id-1, groupId=group-id] Setting offset for partition mail_topic-0 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
[2m2020-12-31 00:50:34.255[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[ntainer#0-0-C-1][0;39m [36mo.s.k.l.KafkaMessageListenerContainer   [0;39m [2m:[0;39m group-id: partitions assigned: [mail_topic-0]
Hibernate: drop table if exists contact
Hibernate: drop table if exists user_registration
[2m2020-12-31 00:50:36.723[0;39m [32mTRACE[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.h.type.spi.TypeConfiguration$Scope    [0;39m [2m:[0;39m Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@56351c02] for TypeConfiguration
[2m2020-12-31 00:50:36.724[0;39m [32mDEBUG[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.h.type.spi.TypeConfiguration$Scope    [0;39m [2m:[0;39m Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@486b35d5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@56351c02]
[2m2020-12-31 00:50:36.726[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Shutdown initiated...
[2m2020-12-31 00:50:36.741[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Shutdown completed.
[2m2020-12-31 00:50:36.743[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Shutting down DiscoveryClient ...
[2m2020-12-31 00:50:39.751[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Unregistering ...
[2m2020-12-31 00:50:39.772[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m DiscoveryClient_USER-AUTHORIZATION-SERVICE/host.docker.internal:user-authorization-service:8000 - deregister  status: 200
[2m2020-12-31 00:50:39.782[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mcom.netflix.discovery.DiscoveryClient   [0;39m [2m:[0;39m Completed shut down of DiscoveryClient
[2m2020-12-31 00:50:39.783[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Stopping service [Tomcat]
[2m2020-12-31 00:50:39.799[0;39m [32m INFO[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mConditionEvaluationReportLoggingListener[0;39m [2m:[0;39m 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2m2020-12-31 00:50:39.801[0;39m [31mERROR[0;39m [35m13124[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.d.LoggingFailureAnalysisReporter  [0;39m [2m:[0;39m 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8000 was already in use.

Action:

Identify and stop the process that's listening on port 8000 or configure this application to listen on another port.

